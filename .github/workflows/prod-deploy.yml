name: Production Deploy

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  IMAGE_NAME: sit722-frontend
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
  PROD_RG: ${{ vars.PROD_RG }}
  PROD_ENV_NAME: ${{ vars.PROD_ENV_NAME }}
  PROD_APP_NAME: ${{ vars.PROD_APP_NAME }}
  AZURE_REGION: ${{ vars.AZURE_REGION }}

jobs:
  deploy-production:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download image reference artifact
        uses: actions/download-artifact@v4
        with:
          name: image-ref
          path: .

      - name: Read image ref
        id: image
        run: echo "IMAGE=$(cat image.txt)" >> $GITHUB_ENV

      - name: Create production environment (if not exists)
        run: |
          az containerapp env create \
            -g $PROD_RG \
            -n $PROD_ENV_NAME \
            -l $AZURE_REGION \
            --logs-workspace-id ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }} \
            --logs-workspace-key ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }} || true

      - name: Deploy production app
        run: |
          az containerapp create \
            -g $PROD_RG \
            -n $PROD_APP_NAME \
            --environment $PROD_ENV_NAME \
            --image $IMAGE \
            --target-port 80 \
            --ingress external \
            --registry-server $ACR_LOGIN_SERVER \
            --query properties.configuration.ingress.fqdn -o tsv > fqdn.txt

      - name: Show production URL
        run: echo "Production app available at: $(cat fqdn.txt)"