name: CI (testing)

on:
  push:
    branches: [ "testing" ]

permissions:
  id-token: write   # Needed for OIDC login to Azure
  contents: read

env:
  IMAGE_NAME: sit722-app
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}

jobs:
  ci-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Example: Node.js setup (safe even if not needed)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies (skip if no package.json)
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping install"
          fi

      - name: Run tests (skip if no package.json)
        run: |
          if [ -f package.json ]; then
            npm test
          else
            echo "No package.json found, skipping tests"
          fi

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR docker login
        run: az acr login --name ${{ vars.ACR_NAME }}

      - name: Build & tag image
        run: |
          GIT_SHA=${{ github.sha }}
          docker build -t $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${GIT_SHA} .
          echo "IMAGE_TAG=$GIT_SHA" >> $GITHUB_ENV

      - name: Push image to ACR
        run: docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${IMAGE_TAG}

      - name: Save image reference
        run: echo "$ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${IMAGE_TAG}" > image.txt

      - name: Upload image ref artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-ref
          path: image.txt